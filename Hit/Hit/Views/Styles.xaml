<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Hit.Controls"
                    xmlns:Converters="clr-namespace:UseAbilities.WPF.Converters;assembly=UseAbilities.WPF">
    
    
    <!--**************-->
    <!--*            *-->
    <!--*   Colors   *-->
    <!--*            *-->
    <!--**V***********-->
    <Color x:Key="ABBYYColor">#ffC20E31</Color>
    <SolidColorBrush x:Key="ABBYYSolidBrush" Color="{StaticResource ABBYYColor}" />

    <Color x:Key="FILENETColor">#0f809e</Color>
    <SolidColorBrush x:Key="FILENETSolidBrush" Color="{StaticResource FILENETColor}" />

    <Color x:Key="SAPColor">#efab00</Color>
    <SolidColorBrush x:Key="SAPSolidBrush" Color="{StaticResource SAPColor}" />

    <Color x:Key="EnvironmentColor">#ffCCCCCC</Color>
    <SolidColorBrush x:Key="EnvironmentSolidBrush" Color="{StaticResource EnvironmentColor}" />

    
    <Color x:Key="ControlLightColor">#ffFFFFFF</Color>
    <Color x:Key="ControlMediumColor">#ffFFFFFF</Color>
    <Color x:Key="ControlDarkColor">#ffFFFFFF</Color>

    <Color x:Key="GlyphColor">#ff000000</Color>
    <Color x:Key="GlyphMouseOver">Green</Color>

    <Color x:Key="BorderLightColor">#ffFFFFFF</Color>
    <Color x:Key="BorderMediumColor">#ffFFFFFF</Color>
    <Color x:Key="BorderDarkColor">#ffFFFFFF</Color>

    <Color x:Key="PressedBorderLightColor">#ffFFFFFF</Color>
    <Color x:Key="PressedBorderDarkColor">#ffFFFFFF</Color>

    <Color x:Key="DisabledBorderLightColor">#ffFFFFFF</Color>
    <Color x:Key="DisabledBorderDarkColor">#ffFFFFFF</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>


    <!--************************-->
    <!--*                      *-->
    <!--*   TextBlock Styles   *-->
    <!--*                      *-->
    <!--**V*********************-->
    <Style x:Key="TextBlockTotalStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Margin" Value="3,-5,0,0" />
        <Setter Property="Visibility" Value="{Binding IsTotalsVisible, Converter={Converters:BoolToVisibilityConverter}, ConverterParameter=Collapsed}" />
    </Style>

    <!--<Style x:Key="TextBlockChartStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="10" />
        
        <Style.Triggers>
            <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource {x:Type Rectangle}}}" Value="">
                
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

    <!--**************************-->
    <!--*                        *-->
    <!--*   StackPanels Styles   *-->
    <!--*                        *-->
    <!--**V***********************-->
    <Style x:Key="StackPanelStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ThemeTitleStackPanelStyle" BasedOn="{StaticResource StackPanelStyle}" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Margin" Value="5,15,5,5" />
    </Style>

    <Style x:Key="ThemeContentStackPanelStyle" BasedOn="{StaticResource StackPanelStyle}" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Margin" Value="0,25,0,0" />
    </Style>

    <Style x:Key="ReportThemeContentStackPanelStyle" BasedOn="{StaticResource ThemeContentStackPanelStyle}" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <!--**********************-->
    <!--*                    *-->
    <!--*   Buttons Styles   *-->
    <!--*                    *-->
    <!--**V*******************-->
    <Style x:Key="LinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock TextDecorations="Underline" FontSize="10">
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#ff000000" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="#bb000000" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="#33000000" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="50" />
    </Style>
    
    <Style TargetType="{x:Type Controls:ButtonExt}" BasedOn="{StaticResource DefaultButtonStyle}">

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ButtonExt}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation To="#bbFFFFFF" Storyboard.TargetName="BgBrush0" Storyboard.TargetProperty="Color" Duration="0:0:0.07"/>
                                        <ColorAnimation To="#bbFFFFFF" Storyboard.TargetName="BgBrush1" Storyboard.TargetProperty="Color" Duration="0:0:0.07"/>
                                        <ColorAnimation To="#bbFFFFFF" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                        <ColorAnimation To="Transparent" Storyboard.TargetName="PlusOneFBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                        <DoubleAnimation To="10" Storyboard.TargetName="PlusOne" Storyboard.TargetProperty="FontSize" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation To="#bbFFFFFF" Storyboard.TargetName="BgBrush0" Storyboard.TargetProperty="Color" Duration="0:0:0.07"/>
                                        <ColorAnimation To="#88FFFFFF" Storyboard.TargetName="BgBrush1" Storyboard.TargetProperty="Color" Duration="0:0:0.07"/>
                                        <ColorAnimation To="#33FFFFFF" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                        <ColorAnimation To="#ff000000" Storyboard.TargetName="PlusOneFBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation To="#ddFFFFFF" Storyboard.TargetName="BgBrush0" Storyboard.TargetProperty="Color" Duration="0:0:0.05"/>
                                        <ColorAnimation To="#aaFFFFFF" Storyboard.TargetName="BgBrush1" Storyboard.TargetProperty="Color" Duration="0:0:0.05"/>
                                        <ColorAnimation To="#66FFFFFF" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.05" />
                                        <ColorAnimation To="#ff000000" Storyboard.TargetName="PlusOneFBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                        <DoubleAnimation To="12" Storyboard.TargetName="PlusOne" Storyboard.TargetProperty="FontSize" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation To="#55FFFFFF" Storyboard.TargetName="BgBrush0" Storyboard.TargetProperty="Color" Duration="0:0:0"/>
                                        <ColorAnimation To="#33FFFFFF" Storyboard.TargetName="BgBrush1" Storyboard.TargetProperty="Color" Duration="0:0:0"/>
                                        <ColorAnimation To="#22FFFFFF" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0" />
                                        <ColorAnimation To="Transparent" Storyboard.TargetName="PlusOneFBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Chrome" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border.BorderBrush>
                                <SolidColorBrush x:Name="BrBrush" Color="#bbFFFFFF" />
                            </Border.BorderBrush>

                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop x:Name="BgBrush0" Color="#bbFFFFFF" Offset="0"/>
                                    <GradientStop x:Name="BgBrush1" Color="#88FFFFFF" Offset="1"/>                                   
                                </LinearGradientBrush>
                            </Border.Background>
                            
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <ContentPresenter Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Grid.Column="1" Grid.Row="2" />

                                <TextBlock Text="{TemplateBinding AdditionalContent}" FontSize="10" FontWeight="DemiBold" Margin="0,0,0,-10"
                                           Grid.Column="2" Grid.Row="1" />
                                <TextBlock x:Name="PlusOne" Text="+1" FontSize="10" FontWeight="DemiBold" Margin="0,0,0,-10"
                                           Grid.Column="3" Grid.Row="1">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush x:Name="PlusOneFBrush" Color="#ff000000" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Grid>                           
                            
                        </Border>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PlusOne" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PlusOne" Property="Visibility" Value="Hidden"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <!--***********************-->
    <!--*                     *-->
    <!--*   Expander Styles   *-->
    <!--*                     *-->
    <!--**V********************-->
    <Style TargetType="{x:Type Expander}">

        <Setter Property="IsExpanded" Value="False" />

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#ffFFFFFF" />

        <Setter Property="FontSize" Value="10" />
        <Setter Property="Foreground" Value="DarkGray" />

        <Setter Property="Margin" Value="0,15,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        
                        <!--<VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="Red" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="Green" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource DisabledBorderLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>-->

                        <Border x:Name="Border" Background="#ddFFFFFF"  Grid.Row="0" BorderThickness="0" CornerRadius="0">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!--<ToggleButton OverridesDefaultStyle="True" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{DynamicResource ExpanderUpHeaderStyle}" Margin="4" />-->
                                <Rectangle x:Name="rectangle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19" Margin="4" />
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center" />

                                <ContentPresenter Grid.Column="1" Margin="4,8,4,4" ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                            
                        </Border>
                        
                        <Border x:Name="Content" Background="#ffFFFFFF" BorderThickness="0" CornerRadius="0" Grid.Row="1">
                            <ContentPresenter Margin="0" />
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" />
                            <Setter Property="Foreground" Value="DarkGray"/>
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Foreground" Value="#ff000000"/>
                            <Setter Property="Data" TargetName="arrow" Value="M 1,1.5 L 4.5,5 L 8,1.5"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="IsExpanded" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="IsExpanded" Value="False"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--***************************-->
    <!--*                         *-->
    <!--*   ToggleButton Styles   *-->
    <!--*                         *-->
    <!--**V************************-->
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle x:Name="rectangle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#FF3C7FB1"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#FF526C7B"/>
                            <Setter Property="StrokeThickness" TargetName="rectangle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
                            <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>